// eslint-disable-next-line import/named
import { API_URL } from '../../config/constants';
import {
  badRequest, notAuthorized, accessForbidden, notFound, conflict,
  serverError
} from './definitions/errorResponse';
import {
  SigninReq, SigninRes, SignupReq
} from './definitions/auth';
import {
  CreateExpenseReq, CreateExpenseRes, getAllExpensesRes, getOneExpenseReq
} from './definitions/expense';


import { signInPath, signUpPath } from './paths/auth';
import { createExpensePath, getOneExpensePath } from './paths/expense';

const swaggerDocument = {
  swagger: '2.0',
  info: {
    version: '1.0.0',
    title: 'Mini Expense API',
    description: 'API Documentation for Mini Expense App',
    header: 'none'
  },
  host: API_URL,
  basePath: '/api/v1/',
  produces: ['application/json'],
  consumes: ['application/json'],
  schemes: ['http', 'https'],
  securityDefinitions: {
    BearerToken: {
      description: `
        All protected routes must be accessed with a Bearer Token.
        The JWT Token is generated by the API upon user login.`,
      type: 'apiKey',
      name: 'Authorization',
      in: 'header'
    },
  },
  tags: [
    {
      name: 'auth',
      description: 'Everything about authentication'
    },
    {
      name: 'expenses',
      description: 'Everything about expenses'
    },
  ],
  paths: {
    '/auth/signup': signUpPath,
    '/auth/signin': signInPath,
    '/expenses': createExpensePath,
    '/expenses/:expenseId': getOneExpensePath,
  },
  definitions: {
    SignupReq, // signup request
    SigninReq, // signin request
    SigninRes, // signin response
    CreateExpenseReq,
    CreateExpenseRes,
    getAllExpensesRes,
    getOneExpenseReq,
    badRequest, // 400
    notAuthorized, // 401
    accessForbidden, // 403
    notFound, // 404
    conflict, // 409
    serverError, // 503
  }
};

export default swaggerDocument;
